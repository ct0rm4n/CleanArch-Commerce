@using FastCommerce.Core.Entities.Domain.Blog
@using FastCommerce.Core.Wrappers
<h3>PostList</h3>

@code {
    [Inject]
    IConfiguration Configuration { get; set; }
    private readonly HttpClient _client = new HttpClient();
    public List<BlogPost> list { get; set; }
    int PageIndex = 0;
    int TotalPages = 1;

    protected override async Task OnInitializedAsync()
    {
        var respose = new PagedResponse<List<BlogPost>>(null, 0, int.MaxValue);
        if (list is null)
        {
            PageIndex = 1;
            respose = await _client.GetFromJsonAsync<PagedResponse<List<BlogPost>>>($"{Configuration["ApiRest"]}api/BlogPost/getall?PageSize=6");
            list = respose.Data;
            TotalPages = respose.TotalPages;
        }
        await base.OnInitializedAsync();
    }
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
