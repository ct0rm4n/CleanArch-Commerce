@page "/admin/products/new"
@page "/products/new"
@using Core.Entities.Domain
@using Blazored.TextEditor
@using System.Net
@using Core.ViewModel.Catalog
@using UI.Server.Utils
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h3>Product Registration</h3>
<EditForm Model="@product" formname="bannerVM" EditContext="@editContext"
OnValidSubmit="@HandleValidSubmit" enctype="multipart/form-data">
    <DataAnnotationsValidator />
    <ValidationSummary />
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @((MarkupString)errorMessage)
        </div>
    }
    <div class="mb-3">
        <label for="title" class="form-label">Title</label>
        <InputText id="Title" class="form-control" @bind-Value="product.Title" />
    </div>

    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <InputText id="Name" class="form-control" @bind-Value="product.Name" />
    </div>
  
    <div class="mb-3">
        <label for="shortDescription" class="form-label">Short Description</label>
        <InputTextArea id="ShortDescription" class="form-control" @bind-Value="product.ShortDescription" />
    </div>

    <div class="mb-3">
        <label for="FullDescription" class="form-label">Full Description</label>
        <InputTextArea id="FullDescription" class="form-control" @bind-Value="product.FullDescription" />
    </div>

    <div class="mb-3">
        <label for="HtmlContent" class="form-label">Html</label>
        <InputTextArea id="HtmlContent" class="form-control" @bind-Value="product.Html" />
    </div>


    <div class="mb-3">
        <label for="Seo" class="form-label">Seo</label>
        <InputText id="Seo" class="form-control" @bind-Value="product.Seo" />
    </div>

    <div class="mb-3">
        <label for="Mpn" class="form-label">Mpn</label>
        <InputText id="Mpn" class="form-control" @bind-Value="product.Mpn" />
    </div>

    <div class="mb-3">
        <label for="Price" class="form-label">Price</label>
        <InputNumber id="Price" class="form-control" @bind-Value="product.Price" />
    </div>

    <div class="mb-3">
        <label for="Type" class="form-label">Type</label>
        <InputText id="Type" class="form-control" @bind-Value="product.Type" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    private ProductVM product = new ProductVM();
    private string? errorMessage;
    private EditContext editContext;
    [Inject]
    IConfiguration Configuration { get; set; }

    private readonly HttpClient _client = new HttpClient();

    protected override async Task OnInitializedAsync()
    {
        _client.DefaultRequestHeaders.Add("Authorization", Configuration["SecretKeys.ApiKey"]);
    }

    public async Task HandleValidSubmit()
    {
        try{
            var url = Configuration["Api.Gateway"];
            var response = await _client.PostAsJsonAsync($"{Configuration["Api.Gateway"]}catalog-gate/Catalog/product/add", product);
            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/products");
            }
            else
            {
                errorMessage = new HandlerErrorMessage().BuildError(response.Content.ReadAsStringAsync().Result, errorMessage);
                StateHasChanged();
            }
        }catch(Exception ex){
            return;
        }
    }
}